name: Scala CI

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:

jobs:
  initial-code-check:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Run code checks
        run: |
          PATH=$PATH:./scripts
          set -x
          enforce-newline-at-eof
          prohibit-trailing-whitespace
          enforce-issue-number-for-todos

          npm install --global remark-cli remark-lint-no-dead-urls remark-validate-links
          validate-markdown-links

  code-style-check:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11

      - name: Resolve dependencies
        run: sbt update

      - name: Check code style
        # Curiously, scalafmtCheckAll doesn't cover *.sbt files, hence scalafmtSbtCheck is needed as well
        # TODO (#147): Enable check when scalafix support has been restored
        run: sbt scalafmtCheckAll scalafmtSbtCheck # "scalafixAll --check"

  test-212:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11

      - name: Resolve dependencies
        run: sbt update

      - name: Compile
        run: sbt compile Test/compile

      - name: Run tests
        run: |
          sbt "++ 2.12.13 test"
          sbt "++ 2.12.14 test"
          sbt "++ 2.12.15 test"

  test-213-1:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11

      - name: Resolve dependencies
        run: sbt update

      - name: Compile
        run: sbt compile Test/compile

      - name: Run tests
        run: |
          sbt "++ 2.13.2 test"
          sbt "++ 2.13.3 test"
          sbt "++ 2.13.4 test"
          sbt "++ 2.13.5 test"

  test-213-2:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Setup Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11

      - name: Resolve dependencies
        run: sbt update

      - name: Compile
        run: sbt compile Test/compile

      - name: Run tests
        run: |
          sbt "++ 2.13.6 test"
          sbt "++ 2.13.7 test"
          sbt "++ 2.13.8 test"

  test-sbt-plugin:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Set up Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11

      - name: Test sbt plugin
        run: sbt scripted

  run-examples:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11

      - name: Run examples
        run: sbt test
        working-directory: examples/event-migration

  publish:
    needs: [initial-code-check, code-style-check, test-212, test-213-1, test-213-2, test-sbt-plugin, run-examples]
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-20.04
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Scala
        uses: olafurpg/setup-scala@v10
        with:
          java-version: adopt@1.11

      - name: Publish from CI
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
